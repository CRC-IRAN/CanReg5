/*
 * ModifyDatabaseStructureInternalFrame.java
 *
 * Created on 20-Jan-2010, 14:15:41
 */
package canreg.client.gui.management;

import canreg.client.gui.CanRegClientView;
import canreg.common.DatabaseDictionaryListElement;
import canreg.common.DatabaseElement;
import canreg.common.DatabaseGroupsListElement;
import canreg.common.DatabaseIndexesListElement;
import canreg.common.DatabaseVariablesListElement;
import canreg.common.Globals;
import canreg.server.management.SystemDescription;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;
import org.w3c.dom.Document;

/**
 *
 * @author ervikm
 */
public class ModifyDatabaseStructureInternalFrame extends javax.swing.JInternalFrame implements ActionListener {

    private JFileChooser chooser;
    private String fileName;
    public static Globals.StandardVariableNames[] listOfAutomaticlyGeneratedVariables = new Globals.StandardVariableNames[]{
        Globals.StandardVariableNames.CheckStatus,
        Globals.StandardVariableNames.ICD10,
        Globals.StandardVariableNames.MultPrimCode,
        Globals.StandardVariableNames.MultPrimSeq,
        Globals.StandardVariableNames.MultPrimTot,
        Globals.StandardVariableNames.ObsoleteFlagPatientTable,
        Globals.StandardVariableNames.ObsoleteFlagTumourTable,
        Globals.StandardVariableNames.PatientCheckStatus,
        Globals.StandardVariableNames.PatientIDTumourTable,
        Globals.StandardVariableNames.PatientRecordID,
        Globals.StandardVariableNames.PatientRecordIDTumourTable,
        Globals.StandardVariableNames.PatientRecordStatus,
        Globals.StandardVariableNames.PatientUpdateDate,
        Globals.StandardVariableNames.PatientUpdatedBy,
        Globals.StandardVariableNames.PersonSearch,
        Globals.StandardVariableNames.SourceRecordID,
        Globals.StandardVariableNames.TumourID,
        Globals.StandardVariableNames.TumourIDSourceTable,
        Globals.StandardVariableNames.TumourRecordID,
        Globals.StandardVariableNames.TumourRecordStatus,
        Globals.StandardVariableNames.TumourUnduplicationStatus,
        Globals.StandardVariableNames.TumourUpdateDate,
        Globals.StandardVariableNames.TumourUpdatedBy
    };
    private SystemDescription systemDescription;
    private final JDesktopPane dtp;

    /** Creates new form ModifyDatabaseStructureInternalFrame */
    public ModifyDatabaseStructureInternalFrame(JDesktopPane dtp) {
        initComponents();
        this.dtp = dtp;
        regionComboBox.setModel(new DefaultComboBoxModel(new String[]{
                    Globals.REGIONS[1],
                    Globals.REGIONS[2],
                    Globals.REGIONS[3],
                    Globals.REGIONS[4],
                    Globals.REGIONS[5],
                    Globals.REGIONS[6],
                    Globals.REGIONS[9]
                }));
        databaseDictionaryPanel1.setActionListener(this);
        databaseVariablePanel1.setActionListener(this);
        databaseGroupPanel1.setActionListener(this);
        databaseIndexPanel1.setActionListener(this);
        // databaseIndexPanel1.setVisible(false);
    }

    public Document getDoc(Document doc) {
        return doc;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generalPanel = new javax.swing.JPanel();
        registryCodeLabel = new javax.swing.JLabel();
        registryCodeTextField = new javax.swing.JTextField();
        checkIfUniqueButton = new javax.swing.JButton();
        regionLabel = new javax.swing.JLabel();
        regionComboBox = new javax.swing.JComboBox();
        registryNameLabel = new javax.swing.JLabel();
        registryNameTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        editorsScrollPane = new javax.swing.JScrollPane();
        editorsPanel = new javax.swing.JPanel();
        searchVariablesPanel = new javax.swing.JPanel();
        personSearchVariablesPanel = new canreg.client.gui.management.PersonSearchVariablesPanel();
        dictionariesPanel = new javax.swing.JPanel();
        databaseDictionaryPanel1 = new canreg.client.gui.management.DatabaseDictionariesPanel();
        variablesPanel = new javax.swing.JPanel();
        databaseVariablePanel1 = new canreg.client.gui.management.DatabaseVariablesPanel();
        groupsPanel = new javax.swing.JPanel();
        databaseGroupPanel1 = new canreg.client.gui.management.DatabaseGroupsPanel();
        codingPanel = new javax.swing.JPanel();
        maleCodeLabel = new javax.swing.JLabel();
        maleCodeTextField = new javax.swing.JTextField();
        femaleCodeTextField = new javax.swing.JTextField();
        femaleCodeLabel = new javax.swing.JLabel();
        unknownSexLabel = new javax.swing.JLabel();
        unknownSexTextField = new javax.swing.JTextField();
        dateFormatLabel = new javax.swing.JLabel();
        dateFormatComboBox = new javax.swing.JComboBox();
        dateSeparatorLabel = new javax.swing.JLabel();
        dateSeparatorTextField = new javax.swing.JTextField();
        morphologyLengthLabel = new javax.swing.JLabel();
        morphologyLengthTextField = new javax.swing.JTextField();
        basisCodesCheckBox = new javax.swing.JCheckBox();
        settingsPanel = new javax.swing.JPanel();
        fastSafeModeCheckBox = new javax.swing.JCheckBox();
        mprulesCheckBox = new javax.swing.JCheckBox();
        specialRegistryCheckBox = new javax.swing.JCheckBox();
        strictPasswordModeCheckBox = new javax.swing.JCheckBox();
        searchVariablesPanel1 = new javax.swing.JPanel();
        databaseIndexPanel1 = new canreg.client.gui.management.DatabaseIndexPanel();

        setClosable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(canreg.client.CanRegClientApp.class).getContext().getResourceMap(ModifyDatabaseStructureInternalFrame.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setFrameIcon(resourceMap.getIcon("Form.frameIcon")); // NOI18N
        setName("Form"); // NOI18N

        generalPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("generalPanel.border.title"))); // NOI18N
        generalPanel.setName("generalPanel"); // NOI18N

        registryCodeLabel.setText(resourceMap.getString("registryCodeLabel.text")); // NOI18N
        registryCodeLabel.setName("registryCodeLabel"); // NOI18N

        registryCodeTextField.setText(resourceMap.getString("registryCodeTextField.text")); // NOI18N
        registryCodeTextField.setName("registryCodeTextField"); // NOI18N

        checkIfUniqueButton.setText(resourceMap.getString("checkIfUniqueButton.text")); // NOI18N
        checkIfUniqueButton.setToolTipText(resourceMap.getString("checkIfUniqueButton.toolTipText")); // NOI18N
        checkIfUniqueButton.setEnabled(false);
        checkIfUniqueButton.setName("checkIfUniqueButton"); // NOI18N

        regionLabel.setText(resourceMap.getString("regionLabel.text")); // NOI18N
        regionLabel.setName("regionLabel"); // NOI18N

        regionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        regionComboBox.setName("regionComboBox"); // NOI18N

        registryNameLabel.setText(resourceMap.getString("registryNameLabel.text")); // NOI18N
        registryNameLabel.setName("registryNameLabel"); // NOI18N

        registryNameTextField.setText(resourceMap.getString("registryNameTextField.text")); // NOI18N
        registryNameTextField.setName("registryNameTextField"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(canreg.client.CanRegClientApp.class).getContext().getActionMap(ModifyDatabaseStructureInternalFrame.class, this);
        jButton1.setAction(actionMap.get("pickXML")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jButton2.setAction(actionMap.get("saveXML")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        javax.swing.GroupLayout generalPanelLayout = new javax.swing.GroupLayout(generalPanel);
        generalPanel.setLayout(generalPanelLayout);
        generalPanelLayout.setHorizontalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(registryCodeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(registryCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkIfUniqueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(regionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(regionComboBox, 0, 139, Short.MAX_VALUE))
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addComponent(registryNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(registryNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );
        generalPanelLayout.setVerticalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registryNameLabel)
                    .addComponent(registryNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registryCodeLabel)
                    .addComponent(registryCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkIfUniqueButton)
                    .addComponent(regionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regionLabel)
                    .addComponent(jButton2)))
        );

        editorsScrollPane.setName("editorsScrollPane"); // NOI18N

        editorsPanel.setName("editorsPanel"); // NOI18N

        searchVariablesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("searchVariablesPanel.border.title"))); // NOI18N
        searchVariablesPanel.setName("searchVariablesPanel"); // NOI18N

        personSearchVariablesPanel.setName("personSearchVariablesPanel"); // NOI18N

        javax.swing.GroupLayout searchVariablesPanelLayout = new javax.swing.GroupLayout(searchVariablesPanel);
        searchVariablesPanel.setLayout(searchVariablesPanelLayout);
        searchVariablesPanelLayout.setHorizontalGroup(
            searchVariablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(personSearchVariablesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
        );
        searchVariablesPanelLayout.setVerticalGroup(
            searchVariablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(personSearchVariablesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
        );

        dictionariesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("dictionariesPanel.border.title"))); // NOI18N
        dictionariesPanel.setName("dictionariesPanel"); // NOI18N

        databaseDictionaryPanel1.setName("databaseDictionaryPanel1"); // NOI18N

        javax.swing.GroupLayout dictionariesPanelLayout = new javax.swing.GroupLayout(dictionariesPanel);
        dictionariesPanel.setLayout(dictionariesPanelLayout);
        dictionariesPanelLayout.setHorizontalGroup(
            dictionariesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(databaseDictionaryPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
        );
        dictionariesPanelLayout.setVerticalGroup(
            dictionariesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(databaseDictionaryPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        variablesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("variablesPanel.border.title"))); // NOI18N
        variablesPanel.setName("variablesPanel"); // NOI18N

        databaseVariablePanel1.setName("databaseVariablePanel1"); // NOI18N

        javax.swing.GroupLayout variablesPanelLayout = new javax.swing.GroupLayout(variablesPanel);
        variablesPanel.setLayout(variablesPanelLayout);
        variablesPanelLayout.setHorizontalGroup(
            variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(databaseVariablePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
        );
        variablesPanelLayout.setVerticalGroup(
            variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(databaseVariablePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );

        groupsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("groupsPanel.border.title"))); // NOI18N
        groupsPanel.setName("groupsPanel"); // NOI18N

        databaseGroupPanel1.setName("databaseGroupPanel1"); // NOI18N

        javax.swing.GroupLayout groupsPanelLayout = new javax.swing.GroupLayout(groupsPanel);
        groupsPanel.setLayout(groupsPanelLayout);
        groupsPanelLayout.setHorizontalGroup(
            groupsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(databaseGroupPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
        );
        groupsPanelLayout.setVerticalGroup(
            groupsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(databaseGroupPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );

        codingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("codingPanel.border.title"))); // NOI18N
        codingPanel.setName("codingPanel"); // NOI18N

        maleCodeLabel.setText(resourceMap.getString("maleCodeLabel.text")); // NOI18N
        maleCodeLabel.setName("maleCodeLabel"); // NOI18N

        maleCodeTextField.setText(resourceMap.getString("maleCodeTextField.text")); // NOI18N
        maleCodeTextField.setName("maleCodeTextField"); // NOI18N

        femaleCodeTextField.setText(resourceMap.getString("femaleCodeTextField.text")); // NOI18N
        femaleCodeTextField.setName("femaleCodeTextField"); // NOI18N

        femaleCodeLabel.setText(resourceMap.getString("femaleCodeLabel.text")); // NOI18N
        femaleCodeLabel.setName("femaleCodeLabel"); // NOI18N

        unknownSexLabel.setText(resourceMap.getString("unknownSexLabel.text")); // NOI18N
        unknownSexLabel.setName("unknownSexLabel"); // NOI18N

        unknownSexTextField.setEditable(false);
        unknownSexTextField.setText(resourceMap.getString("unknownSexTextField.text")); // NOI18N
        unknownSexTextField.setName("unknownSexTextField"); // NOI18N

        dateFormatLabel.setText(resourceMap.getString("dateFormatLabel.text")); // NOI18N
        dateFormatLabel.setName("dateFormatLabel"); // NOI18N

        dateFormatComboBox.setEditable(true);
        dateFormatComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "dd/mm/yyyy", "mm/dd/yyyy", "mm/dd/yy", "yyyy/mm/dd" }));
        dateFormatComboBox.setName("dateFormatComboBox"); // NOI18N

        dateSeparatorLabel.setText(resourceMap.getString("dateSeparatorLabel.text")); // NOI18N
        dateSeparatorLabel.setName("dateSeparatorLabel"); // NOI18N

        dateSeparatorTextField.setText(resourceMap.getString("dateSeparatorTextField.text")); // NOI18N
        dateSeparatorTextField.setName("dateSeparatorTextField"); // NOI18N

        morphologyLengthLabel.setText(resourceMap.getString("morphologyLengthLabel.text")); // NOI18N
        morphologyLengthLabel.setName("morphologyLengthLabel"); // NOI18N

        morphologyLengthTextField.setEditable(false);
        morphologyLengthTextField.setText(resourceMap.getString("morphologyLengthTextField.text")); // NOI18N
        morphologyLengthTextField.setName("morphologyLengthTextField"); // NOI18N

        basisCodesCheckBox.setSelected(true);
        basisCodesCheckBox.setText(resourceMap.getString("basisCodesCheckBox.text")); // NOI18N
        basisCodesCheckBox.setName("basisCodesCheckBox"); // NOI18N

        javax.swing.GroupLayout codingPanelLayout = new javax.swing.GroupLayout(codingPanel);
        codingPanel.setLayout(codingPanelLayout);
        codingPanelLayout.setHorizontalGroup(
            codingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(codingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(codingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(codingPanelLayout.createSequentialGroup()
                        .addGroup(codingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(codingPanelLayout.createSequentialGroup()
                                .addComponent(morphologyLengthLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(morphologyLengthTextField))
                            .addGroup(codingPanelLayout.createSequentialGroup()
                                .addComponent(maleCodeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maleCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(femaleCodeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(femaleCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(codingPanelLayout.createSequentialGroup()
                                .addComponent(dateFormatLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateFormatComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(codingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(codingPanelLayout.createSequentialGroup()
                                .addComponent(unknownSexLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownSexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(codingPanelLayout.createSequentialGroup()
                                .addComponent(dateSeparatorLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateSeparatorTextField, 0, 0, Short.MAX_VALUE))))
                    .addComponent(basisCodesCheckBox))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        codingPanelLayout.setVerticalGroup(
            codingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(codingPanelLayout.createSequentialGroup()
                .addGroup(codingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maleCodeLabel)
                    .addComponent(maleCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(femaleCodeLabel)
                    .addComponent(unknownSexLabel)
                    .addComponent(femaleCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unknownSexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(codingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateFormatLabel)
                    .addComponent(dateFormatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateSeparatorLabel)
                    .addComponent(dateSeparatorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(codingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(morphologyLengthLabel)
                    .addComponent(morphologyLengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(basisCodesCheckBox)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        settingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("settingsPanel.border.title"))); // NOI18N
        settingsPanel.setName("settingsPanel"); // NOI18N

        fastSafeModeCheckBox.setText(resourceMap.getString("fastSafeModeCheckBox.text")); // NOI18N
        fastSafeModeCheckBox.setToolTipText(resourceMap.getString("fastSafeModeCheckBox.toolTipText")); // NOI18N
        fastSafeModeCheckBox.setEnabled(false);
        fastSafeModeCheckBox.setName("fastSafeModeCheckBox"); // NOI18N

        mprulesCheckBox.setSelected(true);
        mprulesCheckBox.setText(resourceMap.getString("mprulesCheckBox.text")); // NOI18N
        mprulesCheckBox.setName("mprulesCheckBox"); // NOI18N

        specialRegistryCheckBox.setText(resourceMap.getString("specialRegistryCheckBox.text")); // NOI18N
        specialRegistryCheckBox.setName("specialRegistryCheckBox"); // NOI18N

        strictPasswordModeCheckBox.setText(resourceMap.getString("strictPasswordModeCheckBox.text")); // NOI18N
        strictPasswordModeCheckBox.setToolTipText(resourceMap.getString("strictPasswordModeCheckBox.toolTipText")); // NOI18N
        strictPasswordModeCheckBox.setEnabled(false);
        strictPasswordModeCheckBox.setName("strictPasswordModeCheckBox"); // NOI18N

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fastSafeModeCheckBox)
                    .addComponent(mprulesCheckBox)
                    .addComponent(specialRegistryCheckBox)
                    .addComponent(strictPasswordModeCheckBox))
                .addContainerGap())
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addComponent(fastSafeModeCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mprulesCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specialRegistryCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(strictPasswordModeCheckBox))
        );

        searchVariablesPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("searchVariablesPanel1.border.title"))); // NOI18N
        searchVariablesPanel1.setName("searchVariablesPanel1"); // NOI18N

        databaseIndexPanel1.setName("databaseIndexPanel1"); // NOI18N

        javax.swing.GroupLayout searchVariablesPanel1Layout = new javax.swing.GroupLayout(searchVariablesPanel1);
        searchVariablesPanel1.setLayout(searchVariablesPanel1Layout);
        searchVariablesPanel1Layout.setHorizontalGroup(
            searchVariablesPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(databaseIndexPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
        );
        searchVariablesPanel1Layout.setVerticalGroup(
            searchVariablesPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(databaseIndexPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout editorsPanelLayout = new javax.swing.GroupLayout(editorsPanel);
        editorsPanel.setLayout(editorsPanelLayout);
        editorsPanelLayout.setHorizontalGroup(
            editorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editorsPanelLayout.createSequentialGroup()
                .addGroup(editorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                    .addComponent(codingPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dictionariesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(groupsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchVariablesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(variablesPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchVariablesPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        editorsPanelLayout.setVerticalGroup(
            editorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editorsPanelLayout.createSequentialGroup()
                .addComponent(dictionariesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(groupsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(variablesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchVariablesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(codingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(settingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchVariablesPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        editorsScrollPane.setViewportView(editorsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(generalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(editorsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(generalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editorsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    @Action
    public void pickXML() {
        // open browser - default folder where the current XML is stored, if possible...
        if (chooser == null) {
            chooser = new JFileChooser(Globals.CANREG_SERVER_SYSTEM_CONFIG_FOLDER);
        }
        // pick XML file
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            fileName = chooser.getSelectedFile().getAbsolutePath();
        }
        openXML();
    }

    public void openXML() {
        // load system desc
        systemDescription = new SystemDescription(fileName);

        personSearchVariablesPanel.setDoc(systemDescription.getSystemDescriptionDocument());
        personSearchVariablesPanel.toggleDefaultSettingsAction();
        personSearchVariablesPanel.setDefaultButtonVisibility(false);

        registryNameTextField.setText(systemDescription.getSystemName());
        registryCodeTextField.setText(systemDescription.getSystemCode());
        regionComboBox.setSelectedItem(systemDescription.getRegion());
        databaseVariablePanel1.setElements(systemDescription.getDatabaseVariableListElements());
        databaseVariablePanel1.setDefaultGroup(systemDescription.getDatabaseGroupsListElements()[1]);
        databaseGroupPanel1.setElements(systemDescription.getDatabaseGroupsListElements());
        databaseDictionaryPanel1.setElements(systemDescription.getDatabaseDictionaryListElements());
        databaseIndexPanel1.setElements(systemDescription.getDatabaseIndexesListElements());

        // coding
        dateFormatComboBox.setSelectedItem(systemDescription.getDateFormat());
        maleCodeTextField.setText(systemDescription.getTextContentFromElement("male_code"));
        femaleCodeTextField.setText(systemDescription.getTextContentFromElement("female_code"));
        unknownSexTextField.setText(systemDescription.getTextContentFromElement("unknown_sex_code"));
        morphologyLengthTextField.setText(systemDescription.getTextContentFromElement("morphology_length"));
        basisCodesCheckBox.setSelected(!"1".equals(systemDescription.getTextContentFromElement("basis_diag_codes")));

        // settings
        fastSafeModeCheckBox.setSelected(!"1".equals(systemDescription.getTextContentFromElement("fast_safe_mode")));
        mprulesCheckBox.setSelected(!"1".equals(systemDescription.getTextContentFromElement("mult_prim_rules")));
        specialRegistryCheckBox.setSelected("1".equals(systemDescription.getTextContentFromElement("special_registry")));
        strictPasswordModeCheckBox.setSelected("1".equals(systemDescription.getTextContentFromElement("password_rules")));

    }

    @Action
    public void saveXML() {
        // refresh the doc
        // set the system stuff
        systemDescription.setSystemName(registryNameTextField.getText());
        systemDescription.setRegistryCode(registryCodeTextField.getText());
        systemDescription.setRegionCode(Arrays.asList(Globals.REGIONS).indexOf(regionComboBox.getSelectedItem()));
        systemDescription.setDictionaries((DatabaseDictionaryListElement[]) databaseDictionaryPanel1.getDatabaseElements());
        systemDescription.setGroups((DatabaseGroupsListElement[]) databaseGroupPanel1.getDatabaseElements());
        systemDescription.setVariables((DatabaseVariablesListElement[]) databaseVariablePanel1.getDatabaseElements());
        systemDescription.setIndexes((DatabaseIndexesListElement[]) databaseIndexPanel1.getDatabaseElements());
        // save doc
        fileName = Globals.CANREG_SERVER_SYSTEM_CONFIG_FOLDER + File.separator + registryCodeTextField.getText().trim() + ".xml";
        File file = new File(fileName);
        File oldFile = null;
        if (file.exists()) {
            int i = 0;
            oldFile = new File(fileName + "." + i);
            while (oldFile.exists()) {
                i++;
                oldFile = new File(fileName + "." + i);
            }
            file.renameTo(oldFile.getAbsoluteFile());
        }
        systemDescription.saveSystemDescriptionXML(fileName);
        String message = java.util.ResourceBundle.getBundle("canreg/client/gui/management/resources/ModifyDatabaseStructureInternalFrame").getString("SYSTEM_DEFINITION_SAVED_AS_") + fileName + ".";
        if (oldFile != null) {
            message += "\n" +java.util.ResourceBundle.getBundle("canreg/client/gui/management/resources/ModifyDatabaseStructureInternalFrame").getString("OLD_FILE_BACKED_UP_AS_")+ oldFile.getAbsolutePath();
        }
        JOptionPane.showMessageDialog(this, message, "Title", JOptionPane.INFORMATION_MESSAGE);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox basisCodesCheckBox;
    private javax.swing.JButton checkIfUniqueButton;
    private javax.swing.JPanel codingPanel;
    private canreg.client.gui.management.DatabaseDictionariesPanel databaseDictionaryPanel1;
    private canreg.client.gui.management.DatabaseGroupsPanel databaseGroupPanel1;
    private canreg.client.gui.management.DatabaseIndexPanel databaseIndexPanel1;
    private canreg.client.gui.management.DatabaseVariablesPanel databaseVariablePanel1;
    private javax.swing.JComboBox dateFormatComboBox;
    private javax.swing.JLabel dateFormatLabel;
    private javax.swing.JLabel dateSeparatorLabel;
    private javax.swing.JTextField dateSeparatorTextField;
    private javax.swing.JPanel dictionariesPanel;
    private javax.swing.JPanel editorsPanel;
    private javax.swing.JScrollPane editorsScrollPane;
    private javax.swing.JCheckBox fastSafeModeCheckBox;
    private javax.swing.JLabel femaleCodeLabel;
    private javax.swing.JTextField femaleCodeTextField;
    private javax.swing.JPanel generalPanel;
    private javax.swing.JPanel groupsPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel maleCodeLabel;
    private javax.swing.JTextField maleCodeTextField;
    private javax.swing.JLabel morphologyLengthLabel;
    private javax.swing.JTextField morphologyLengthTextField;
    private javax.swing.JCheckBox mprulesCheckBox;
    private canreg.client.gui.management.PersonSearchVariablesPanel personSearchVariablesPanel;
    private javax.swing.JComboBox regionComboBox;
    private javax.swing.JLabel regionLabel;
    private javax.swing.JLabel registryCodeLabel;
    private javax.swing.JTextField registryCodeTextField;
    private javax.swing.JLabel registryNameLabel;
    private javax.swing.JTextField registryNameTextField;
    private javax.swing.JPanel searchVariablesPanel;
    private javax.swing.JPanel searchVariablesPanel1;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JCheckBox specialRegistryCheckBox;
    private javax.swing.JCheckBox strictPasswordModeCheckBox;
    private javax.swing.JLabel unknownSexLabel;
    private javax.swing.JTextField unknownSexTextField;
    private javax.swing.JPanel variablesPanel;
    // End of variables declaration//GEN-END:variables

    public void actionPerformed(ActionEvent e) {
        if (e.getActionCommand().equals(DatabaseVariableEditorInternalFrame.UPDATED)) {
            databaseVariablePanel1.redrawTable();
        } else if (e.getActionCommand().equals(DatabaseGroupEditorInternalFrame.UPDATED)) {
            databaseGroupPanel1.redrawTable();
        } else if (e.getActionCommand().equals(DatabaseDictionaryEditorInternalFrame.UPDATED)) {
            databaseDictionaryPanel1.redrawTable();
        } else if (e.getActionCommand().equals(DatabaseElementPanel.EDIT_ACTION)) {
            if (systemDescription != null) {
                DatabaseElementPanel ep = (DatabaseElementPanel) e.getSource();
                DatabaseElement dbe = ep.getDatabaseElement();
                if (dbe instanceof DatabaseVariablesListElement) {
                    DatabaseVariableEditorInternalFrame dveif = new DatabaseVariableEditorInternalFrame();
                    dveif.setDictionaries(databaseDictionaryPanel1.getDatabaseElements());
                    dveif.setGroups(databaseGroupPanel1.getDatabaseElements());
                    dveif.setDatabaseVariablesListElement((DatabaseVariablesListElement) dbe);
                    dveif.setActionListener(this);
                    CanRegClientView.showAndPositionInternalFrame(dtp, dveif);
                } else if (dbe instanceof DatabaseDictionaryListElement) {
                    DatabaseDictionaryEditorInternalFrame dveif = new DatabaseDictionaryEditorInternalFrame();
                    dveif.setDatabaseDictionaryListElement((DatabaseDictionaryListElement) dbe);
                    dveif.setActionListener(this);
                    CanRegClientView.showAndPositionInternalFrame(dtp, dveif);
                } else if (dbe instanceof DatabaseGroupsListElement) {
                    DatabaseGroupEditorInternalFrame dveif = new DatabaseGroupEditorInternalFrame();
                    dveif.setDatabaseGroupsListElement((DatabaseGroupsListElement) dbe);
                    dveif.setActionListener(this);
                    CanRegClientView.showAndPositionInternalFrame(dtp, dveif);
                }
            } else {
                JOptionPane.showInternalMessageDialog(this,
                        "Please load a system definition XML first.");
            }
        }
    }
}
